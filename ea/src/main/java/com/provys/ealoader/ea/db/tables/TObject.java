/*
 * This file is generated by jOOQ.
 */
package com.provys.ealoader.ea.db.tables;


import com.provys.ealoader.ea.db.Indexes;
import com.provys.ealoader.ea.db.Ker;
import com.provys.ealoader.ea.db.Keys;
import com.provys.ealoader.ea.db.tables.records.TObjectRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TObject extends TableImpl<TObjectRecord> {

    private static final long serialVersionUID = 1322266548;

    /**
     * The reference instance of <code>KER.T_OBJECT</code>
     */
    public static final TObject T_OBJECT = new TObject();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TObjectRecord> getRecordType() {
        return TObjectRecord.class;
    }

    /**
     * The column <code>KER.T_OBJECT.OBJECT_ID</code>.
     */
    public final TableField<TObjectRecord, Long> OBJECT_ID = createField("OBJECT_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>KER.T_OBJECT.OBJECT_TYPE</code>.
     */
    public final TableField<TObjectRecord, String> OBJECT_TYPE = createField("OBJECT_TYPE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.DIAGRAM_ID</code>.
     */
    public final TableField<TObjectRecord, Long> DIAGRAM_ID = createField("DIAGRAM_ID", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.NAME</code>.
     */
    public final TableField<TObjectRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.ALIAS</code>.
     */
    public final TableField<TObjectRecord, String> ALIAS = createField("ALIAS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.AUTHOR</code>.
     */
    public final TableField<TObjectRecord, String> AUTHOR = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.VERSION</code>.
     */
    public final TableField<TObjectRecord, String> VERSION = createField("VERSION", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("'1.0'", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>KER.T_OBJECT.NOTE</code>.
     */
    public final TableField<TObjectRecord, String> NOTE = createField("NOTE", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.PACKAGE_ID</code>.
     */
    public final TableField<TObjectRecord, Long> PACKAGE_ID = createField("PACKAGE_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0  ", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.STEREOTYPE</code>.
     */
    public final TableField<TObjectRecord, String> STEREOTYPE = createField("STEREOTYPE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.NTYPE</code>.
     */
    public final TableField<TObjectRecord, Long> NTYPE = createField("NTYPE", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.COMPLEXITY</code>.
     */
    public final TableField<TObjectRecord, String> COMPLEXITY = createField("COMPLEXITY", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("2", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>KER.T_OBJECT.EFFORT</code>.
     */
    public final TableField<TObjectRecord, Long> EFFORT = createField("EFFORT", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.STYLE</code>.
     */
    public final TableField<TObjectRecord, String> STYLE = createField("STYLE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.BACKCOLOR</code>.
     */
    public final TableField<TObjectRecord, Long> BACKCOLOR = createField("BACKCOLOR", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.BORDERSTYLE</code>.
     */
    public final TableField<TObjectRecord, Long> BORDERSTYLE = createField("BORDERSTYLE", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.BORDERWIDTH</code>.
     */
    public final TableField<TObjectRecord, Long> BORDERWIDTH = createField("BORDERWIDTH", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.FONTCOLOR</code>.
     */
    public final TableField<TObjectRecord, Long> FONTCOLOR = createField("FONTCOLOR", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.BORDERCOLOR</code>.
     */
    public final TableField<TObjectRecord, Long> BORDERCOLOR = createField("BORDERCOLOR", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.CREATEDDATE</code>.
     */
    public final TableField<TObjectRecord, Date> CREATEDDATE = createField("CREATEDDATE", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("SYSDATE", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>KER.T_OBJECT.MODIFIEDDATE</code>.
     */
    public final TableField<TObjectRecord, Date> MODIFIEDDATE = createField("MODIFIEDDATE", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("SYSDATE", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * The column <code>KER.T_OBJECT.STATUS</code>.
     */
    public final TableField<TObjectRecord, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>KER.T_OBJECT.ABSTRACT</code>.
     */
    public final TableField<TObjectRecord, String> ABSTRACT = createField("ABSTRACT", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>KER.T_OBJECT.TAGGED</code>.
     */
    public final TableField<TObjectRecord, Long> TAGGED = createField("TAGGED", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>KER.T_OBJECT.PDATA1</code>.
     */
    public final TableField<TObjectRecord, String> PDATA1 = createField("PDATA1", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.PDATA2</code>.
     */
    public final TableField<TObjectRecord, String> PDATA2 = createField("PDATA2", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.PDATA3</code>.
     */
    public final TableField<TObjectRecord, String> PDATA3 = createField("PDATA3", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.PDATA4</code>.
     */
    public final TableField<TObjectRecord, String> PDATA4 = createField("PDATA4", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.PDATA5</code>.
     */
    public final TableField<TObjectRecord, String> PDATA5 = createField("PDATA5", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.CONCURRENCY</code>.
     */
    public final TableField<TObjectRecord, String> CONCURRENCY = createField("CONCURRENCY", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>KER.T_OBJECT.VISIBILITY</code>.
     */
    public final TableField<TObjectRecord, String> VISIBILITY = createField("VISIBILITY", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>KER.T_OBJECT.PERSISTENCE</code>.
     */
    public final TableField<TObjectRecord, String> PERSISTENCE = createField("PERSISTENCE", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>KER.T_OBJECT.CARDINALITY</code>.
     */
    public final TableField<TObjectRecord, String> CARDINALITY = createField("CARDINALITY", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>KER.T_OBJECT.GENTYPE</code>.
     */
    public final TableField<TObjectRecord, String> GENTYPE = createField("GENTYPE", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>KER.T_OBJECT.GENFILE</code>.
     */
    public final TableField<TObjectRecord, String> GENFILE = createField("GENFILE", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.HEADER1</code>.
     */
    public final TableField<TObjectRecord, String> HEADER1 = createField("HEADER1", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.HEADER2</code>.
     */
    public final TableField<TObjectRecord, String> HEADER2 = createField("HEADER2", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.PHASE</code>.
     */
    public final TableField<TObjectRecord, String> PHASE = createField("PHASE", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>KER.T_OBJECT.SCOPE</code>.
     */
    public final TableField<TObjectRecord, String> SCOPE = createField("SCOPE", org.jooq.impl.SQLDataType.VARCHAR(25), this, "");

    /**
     * The column <code>KER.T_OBJECT.GENOPTION</code>.
     */
    public final TableField<TObjectRecord, String> GENOPTION = createField("GENOPTION", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.GENLINKS</code>.
     */
    public final TableField<TObjectRecord, String> GENLINKS = createField("GENLINKS", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.CLASSIFIER</code>.
     */
    public final TableField<TObjectRecord, Long> CLASSIFIER = createField("CLASSIFIER", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>KER.T_OBJECT.EA_GUID</code>.
     */
    public final TableField<TObjectRecord, String> EA_GUID = createField("EA_GUID", org.jooq.impl.SQLDataType.VARCHAR(40).nullable(false), this, "");

    /**
     * The column <code>KER.T_OBJECT.PARENTID</code>.
     */
    public final TableField<TObjectRecord, Long> PARENTID = createField("PARENTID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>KER.T_OBJECT.RUNSTATE</code>.
     */
    public final TableField<TObjectRecord, String> RUNSTATE = createField("RUNSTATE", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.CLASSIFIER_GUID</code>.
     */
    public final TableField<TObjectRecord, String> CLASSIFIER_GUID = createField("CLASSIFIER_GUID", org.jooq.impl.SQLDataType.VARCHAR(40), this, "");

    /**
     * The column <code>KER.T_OBJECT.TPOS</code>.
     */
    public final TableField<TObjectRecord, Long> TPOS = createField("TPOS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>KER.T_OBJECT.ISROOT</code>.
     */
    public final TableField<TObjectRecord, Long> ISROOT = createField("ISROOT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>KER.T_OBJECT.ISLEAF</code>.
     */
    public final TableField<TObjectRecord, Long> ISLEAF = createField("ISLEAF", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>KER.T_OBJECT.ISSPEC</code>.
     */
    public final TableField<TObjectRecord, Long> ISSPEC = createField("ISSPEC", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>KER.T_OBJECT.ISACTIVE</code>.
     */
    public final TableField<TObjectRecord, Long> ISACTIVE = createField("ISACTIVE", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>KER.T_OBJECT.STATEFLAGS</code>.
     */
    public final TableField<TObjectRecord, String> STATEFLAGS = createField("STATEFLAGS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.PACKAGEFLAGS</code>.
     */
    public final TableField<TObjectRecord, String> PACKAGEFLAGS = createField("PACKAGEFLAGS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.MULTIPLICITY</code>.
     */
    public final TableField<TObjectRecord, String> MULTIPLICITY = createField("MULTIPLICITY", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>KER.T_OBJECT.STYLEEX</code>.
     */
    public final TableField<TObjectRecord, String> STYLEEX = createField("STYLEEX", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>KER.T_OBJECT.ACTIONFLAGS</code>.
     */
    public final TableField<TObjectRecord, String> ACTIONFLAGS = createField("ACTIONFLAGS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>KER.T_OBJECT.EVENTFLAGS</code>.
     */
    public final TableField<TObjectRecord, String> EVENTFLAGS = createField("EVENTFLAGS", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>KER.T_OBJECT</code> table reference
     */
    public TObject() {
        this(DSL.name("T_OBJECT"), null);
    }

    /**
     * Create an aliased <code>KER.T_OBJECT</code> table reference
     */
    public TObject(String alias) {
        this(DSL.name(alias), T_OBJECT);
    }

    /**
     * Create an aliased <code>KER.T_OBJECT</code> table reference
     */
    public TObject(Name alias) {
        this(alias, T_OBJECT);
    }

    private TObject(Name alias, Table<TObjectRecord> aliased) {
        this(alias, aliased, null);
    }

    private TObject(Name alias, Table<TObjectRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TObject(Table<O> child, ForeignKey<O, TObjectRecord> key) {
        super(child, key, T_OBJECT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ker.KER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IX_OBJECT_CLASSIFIER, Indexes.IX_OBJECT_CLASSIFIERGUID, Indexes.IX_OBJECT_EAGUIDCLASSIFIER, Indexes.IX_OBJECT_EVENTFLAGS, Indexes.IX_OBJECT_NAME, Indexes.IX_OBJECT_NTYPE, Indexes.IX_OBJECT_OBJECTTYPE, Indexes.IX_OBJECT_PACKAGEID, Indexes.IX_OBJECT_PARENTID, Indexes.IX_OBJECT_PDATA1, Indexes.IX_OBJECT_PDATA5, Indexes.IX_OBJECT_PKGIDPDATA1CLASS, Indexes.PK_OBJECT, Indexes.UQ_OBJ_EAGUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TObjectRecord> getPrimaryKey() {
        return Keys.PK_OBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TObjectRecord>> getKeys() {
        return Arrays.<UniqueKey<TObjectRecord>>asList(Keys.PK_OBJECT, Keys.UQ_OBJ_EAGUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TObject as(String alias) {
        return new TObject(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TObject as(Name alias) {
        return new TObject(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TObject rename(String name) {
        return new TObject(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TObject rename(Name name) {
        return new TObject(name, null);
    }
}
