/*
 * This file is generated by jOOQ.
 */
package com.provys.ealoader.catalogue.db.tables;


import com.provys.ealoader.catalogue.db.Cat;
import com.provys.ealoader.catalogue.db.tables.records.CatDomainVwRecord;

import java.math.BigInteger;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Generated view for entity DOMAIN
 * Domain - attribute type (catalogue)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CatDomainVw extends TableImpl<CatDomainVwRecord> {

    private static final long serialVersionUID = 1207249507;

    /**
     * The reference instance of <code>CAT.CAT_DOMAIN_VW</code>
     */
    public static final CatDomainVw CAT_DOMAIN_VW = new CatDomainVw();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CatDomainVwRecord> getRecordType() {
        return CatDomainVwRecord.class;
    }

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.DOMAIN_ID</code>. UID of domain
     */
    public final TableField<CatDomainVwRecord, BigInteger> DOMAIN_ID = createField("DOMAIN_ID", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(38).nullable(false), this, "UID of domain");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.NAME_NM</code>. Internal name of domain
     */
    public final TableField<CatDomainVwRecord, String> NAME_NM = createField("NAME_NM", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "Internal name of domain");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.NAME</code>. Name of domain
     */
    public final TableField<CatDomainVwRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "Name of domain");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.X_UPNAME</code>. Calculated column - uppercase of NAME
     */
    public final TableField<CatDomainVwRecord, String> X_UPNAME = createField("X_UPNAME", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "Calculated column - uppercase of NAME");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.DATATYPE_NM</code>. PROVYS datatype used for implementation of column of this domain
     */
    public final TableField<CatDomainVwRecord, String> DATATYPE_NM = createField("DATATYPE_NM", org.jooq.impl.SQLDataType.VARCHAR(20), this, "PROVYS datatype used for implementation of column of this domain");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.DATALENGTH</code>. Length (maximum length) of data column corresponding to this domain
     */
    public final TableField<CatDomainVwRecord, Short> DATALENGTH = createField("DATALENGTH", org.jooq.impl.SQLDataType.SMALLINT, this, "Length (maximum length) of data column corresponding to this domain");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.DATAPRECISION</code>. Precision of columns from this domain (for numbers only)
     */
    public final TableField<CatDomainVwRecord, Byte> DATAPRECISION = createField("DATAPRECISION", org.jooq.impl.SQLDataType.TINYINT, this, "Precision of columns from this domain (for numbers only)");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.NOTE</code>. Notes for administrator of catalogue
     */
    public final TableField<CatDomainVwRecord, String> NOTE = createField("NOTE", org.jooq.impl.SQLDataType.VARCHAR(4000), this, "Notes for administrator of catalogue");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.ALLOWED</code>. Not allowed domains cannot be manualy created and they are reported in servercheck. Items (e.g. attributes or components) with non-allowed domains should be changed to allowed ones.
     */
    public final TableField<CatDomainVwRecord, String> ALLOWED = createField("ALLOWED", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "Not allowed domains cannot be manualy created and they are reported in servercheck. Items (e.g. attributes or components) with non-allowed domains should be changed to allowed ones.");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.QVISIBLE</code>. Default query visibility for columns from this domain
     */
    public final TableField<CatDomainVwRecord, String> QVISIBLE = createField("QVISIBLE", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "Default query visibility for columns from this domain");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.LVISIBLE</code>. Default lists visibility for columns from this domain
     */
    public final TableField<CatDomainVwRecord, String> LVISIBLE = createField("LVISIBLE", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "Default lists visibility for columns from this domain");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.VALIDATE_CD</code>. PL/SQL block for standard validation (used if no format-specific validation is specified); value should be bound to IN/OUT :c_Value bind variable
     */
    public final TableField<CatDomainVwRecord, String> VALIDATE_CD = createField("VALIDATE_CD", org.jooq.impl.SQLDataType.VARCHAR(4000), this, "PL/SQL block for standard validation (used if no format-specific validation is specified); value should be bound to IN/OUT :c_Value bind variable");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.LFORMAT_CD</code>. PL/SQL block for creation of formated output in list
     */
    public final TableField<CatDomainVwRecord, String> LFORMAT_CD = createField("LFORMAT_CD", org.jooq.impl.SQLDataType.VARCHAR(4000), this, "PL/SQL block for creation of formated output in list");

    /**
     * The column <code>CAT.CAT_DOMAIN_VW.NATORDER</code>. When domain has native ordering, unmodified attribute value is used for ordering in XML lists. For domains without native ordering, formatted value (converted to string) is used
     */
    public final TableField<CatDomainVwRecord, String> NATORDER = createField("NATORDER", org.jooq.impl.SQLDataType.CHAR(1).nullable(false), this, "When domain has native ordering, unmodified attribute value is used for ordering in XML lists. For domains without native ordering, formatted value (converted to string) is used");

    /**
     * Create a <code>CAT.CAT_DOMAIN_VW</code> table reference
     */
    public CatDomainVw() {
        this(DSL.name("CAT_DOMAIN_VW"), null);
    }

    /**
     * Create an aliased <code>CAT.CAT_DOMAIN_VW</code> table reference
     */
    public CatDomainVw(String alias) {
        this(DSL.name(alias), CAT_DOMAIN_VW);
    }

    /**
     * Create an aliased <code>CAT.CAT_DOMAIN_VW</code> table reference
     */
    public CatDomainVw(Name alias) {
        this(alias, CAT_DOMAIN_VW);
    }

    private CatDomainVw(Name alias, Table<CatDomainVwRecord> aliased) {
        this(alias, aliased, null);
    }

    private CatDomainVw(Name alias, Table<CatDomainVwRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Generated view for entity DOMAIN\nDomain - attribute type (catalogue)"));
    }

    public <O extends Record> CatDomainVw(Table<O> child, ForeignKey<O, CatDomainVwRecord> key) {
        super(child, key, CAT_DOMAIN_VW);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Cat.CAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CatDomainVw as(String alias) {
        return new CatDomainVw(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CatDomainVw as(Name alias) {
        return new CatDomainVw(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CatDomainVw rename(String name) {
        return new CatDomainVw(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CatDomainVw rename(Name name) {
        return new CatDomainVw(name, null);
    }
}
