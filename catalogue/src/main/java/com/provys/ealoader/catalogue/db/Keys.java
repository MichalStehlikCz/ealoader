/*
 * This file is generated by jOOQ.
 */
package com.provys.ealoader.catalogue.db;


import com.provys.ealoader.catalogue.db.tables.KerAttrTb;
import com.provys.ealoader.catalogue.db.tables.KerDomainTb;
import com.provys.ealoader.catalogue.db.tables.KerEntityTb;
import com.provys.ealoader.catalogue.db.tables.KerRelTb;
import com.provys.ealoader.catalogue.db.tables.records.KerAttrTbRecord;
import com.provys.ealoader.catalogue.db.tables.records.KerDomainTbRecord;
import com.provys.ealoader.catalogue.db.tables.records.KerEntityTbRecord;
import com.provys.ealoader.catalogue.db.tables.records.KerRelTbRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>KER</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<KerAttrTbRecord> KER_ATTR_PK = UniqueKeys0.KER_ATTR_PK;
    public static final UniqueKey<KerAttrTbRecord> KER_ATTR_ENTANDNAME_UK = UniqueKeys0.KER_ATTR_ENTANDNAME_UK;
    public static final UniqueKey<KerAttrTbRecord> KER_ATTR_ENTANDNM_UK = UniqueKeys0.KER_ATTR_ENTANDNM_UK;
    public static final UniqueKey<KerDomainTbRecord> KER_DOMAIN_PK = UniqueKeys0.KER_DOMAIN_PK;
    public static final UniqueKey<KerDomainTbRecord> KER_DOMAIN_NM_UK = UniqueKeys0.KER_DOMAIN_NM_UK;
    public static final UniqueKey<KerDomainTbRecord> KER_DOMAIN_UPNAME_UK = UniqueKeys0.KER_DOMAIN_UPNAME_UK;
    public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_PK = UniqueKeys0.KER_ENTITY_PK;
    public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_NM_UK = UniqueKeys0.KER_ENTITY_NM_UK;
    public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_UPNAME_UK = UniqueKeys0.KER_ENTITY_UPNAME_UK;
    public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_VIEW_UK = UniqueKeys0.KER_ENTITY_VIEW_UK;
    public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_TEXTVIEW_UK = UniqueKeys0.KER_ENTITY_TEXTVIEW_UK;
    public static final UniqueKey<KerRelTbRecord> KER_REL_PK = UniqueKeys0.KER_REL_PK;
    public static final UniqueKey<KerRelTbRecord> KER_REL_NM_UK = UniqueKeys0.KER_REL_NM_UK;
    public static final UniqueKey<KerRelTbRecord> KER_REL_NAME_UK = UniqueKeys0.KER_REL_NAME_UK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<KerAttrTbRecord, KerEntityTbRecord> KER_ATTR_ENTITY_FK = ForeignKeys0.KER_ATTR_ENTITY_FK;
    public static final ForeignKey<KerAttrTbRecord, KerDomainTbRecord> KER_ATTR_DOMAIN_FK = ForeignKeys0.KER_ATTR_DOMAIN_FK;
    public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_ACCDOCOBJECTFORMUL_FK = ForeignKeys0.KER_ATTR_ACCDOCOBJECTFORMUL_FK;
    public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_FROMOBJECTFORMULA_FK = ForeignKeys0.KER_ATTR_FROMOBJECTFORMULA_FK;
    public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_TOOBJECTFORMULA_FK = ForeignKeys0.KER_ATTR_TOOBJECTFORMULA_FK;
    public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_TEXTSRC_FK = ForeignKeys0.KER_ATTR_TEXTSRC_FK;
    public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_OWNERFORMULA_FK = ForeignKeys0.KER_ATTR_OWNERFORMULA_FK;
    public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_IMGSRC_FK = ForeignKeys0.KER_ATTR_IMGSRC_FK;
    public static final ForeignKey<KerEntityTbRecord, KerEntityTbRecord> KER_ENTITY_ANCESTOR_FK = ForeignKeys0.KER_ENTITY_ANCESTOR_FK;
    public static final ForeignKey<KerEntityTbRecord, KerRelTbRecord> KER_ENTITY_MASTER_FK = ForeignKeys0.KER_ENTITY_MASTER_FK;
    public static final ForeignKey<KerRelTbRecord, KerEntityTbRecord> KER_REL_ENTITY_FK = ForeignKeys0.KER_REL_ENTITY_FK;
    public static final ForeignKey<KerRelTbRecord, KerEntityTbRecord> KER_REL_TOENTITY_FK = ForeignKeys0.KER_REL_TOENTITY_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<KerAttrTbRecord> KER_ATTR_PK = Internal.createUniqueKey(KerAttrTb.KER_ATTR_TB, "KER_ATTR_PK", KerAttrTb.KER_ATTR_TB.ATTR_ID);
        public static final UniqueKey<KerAttrTbRecord> KER_ATTR_ENTANDNAME_UK = Internal.createUniqueKey(KerAttrTb.KER_ATTR_TB, "KER_ATTR_ENTANDNAME_UK", KerAttrTb.KER_ATTR_TB.ENTITY_ID, KerAttrTb.KER_ATTR_TB.NAME);
        public static final UniqueKey<KerAttrTbRecord> KER_ATTR_ENTANDNM_UK = Internal.createUniqueKey(KerAttrTb.KER_ATTR_TB, "KER_ATTR_ENTANDNM_UK", KerAttrTb.KER_ATTR_TB.ENTITY_ID, KerAttrTb.KER_ATTR_TB.NAME_NM);
        public static final UniqueKey<KerDomainTbRecord> KER_DOMAIN_PK = Internal.createUniqueKey(KerDomainTb.KER_DOMAIN_TB, "KER_DOMAIN_PK", KerDomainTb.KER_DOMAIN_TB.DOMAIN_ID);
        public static final UniqueKey<KerDomainTbRecord> KER_DOMAIN_NM_UK = Internal.createUniqueKey(KerDomainTb.KER_DOMAIN_TB, "KER_DOMAIN_NM_UK", KerDomainTb.KER_DOMAIN_TB.NAME_NM);
        public static final UniqueKey<KerDomainTbRecord> KER_DOMAIN_UPNAME_UK = Internal.createUniqueKey(KerDomainTb.KER_DOMAIN_TB, "KER_DOMAIN_UPNAME_UK", KerDomainTb.KER_DOMAIN_TB.X_UPNAME);
        public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_PK = Internal.createUniqueKey(KerEntityTb.KER_ENTITY_TB, "KER_ENTITY_PK", KerEntityTb.KER_ENTITY_TB.ENTITY_ID);
        public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_NM_UK = Internal.createUniqueKey(KerEntityTb.KER_ENTITY_TB, "KER_ENTITY_NM_UK", KerEntityTb.KER_ENTITY_TB.NAME_NM);
        public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_UPNAME_UK = Internal.createUniqueKey(KerEntityTb.KER_ENTITY_TB, "KER_ENTITY_UPNAME_UK", KerEntityTb.KER_ENTITY_TB.X_UPNAME);
        public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_VIEW_UK = Internal.createUniqueKey(KerEntityTb.KER_ENTITY_TB, "KER_ENTITY_VIEW_UK", KerEntityTb.KER_ENTITY_TB.VIEW_NM);
        public static final UniqueKey<KerEntityTbRecord> KER_ENTITY_TEXTVIEW_UK = Internal.createUniqueKey(KerEntityTb.KER_ENTITY_TB, "KER_ENTITY_TEXTVIEW_UK", KerEntityTb.KER_ENTITY_TB.TEXTVIEW_NM);
        public static final UniqueKey<KerRelTbRecord> KER_REL_PK = Internal.createUniqueKey(KerRelTb.KER_REL_TB, "KER_REL_PK", KerRelTb.KER_REL_TB.REL_ID);
        public static final UniqueKey<KerRelTbRecord> KER_REL_NM_UK = Internal.createUniqueKey(KerRelTb.KER_REL_TB, "KER_REL_NM_UK", KerRelTb.KER_REL_TB.NAME_NM);
        public static final UniqueKey<KerRelTbRecord> KER_REL_NAME_UK = Internal.createUniqueKey(KerRelTb.KER_REL_TB, "KER_REL_NAME_UK", KerRelTb.KER_REL_TB.ENTITY_ID, KerRelTb.KER_REL_TB.NAME, KerRelTb.KER_REL_TB.TOENTITY_ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<KerAttrTbRecord, KerEntityTbRecord> KER_ATTR_ENTITY_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ENTITY_PK, KerAttrTb.KER_ATTR_TB, "KER_ATTR_ENTITY_FK", KerAttrTb.KER_ATTR_TB.ENTITY_ID);
        public static final ForeignKey<KerAttrTbRecord, KerDomainTbRecord> KER_ATTR_DOMAIN_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_DOMAIN_PK, KerAttrTb.KER_ATTR_TB, "KER_ATTR_DOMAIN_FK", KerAttrTb.KER_ATTR_TB.DOMAIN_ID);
        public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_ACCDOCOBJECTFORMUL_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ATTR_PK, KerAttrTb.KER_ATTR_TB, "KER_ATTR_ACCDOCOBJECTFORMUL_FK", KerAttrTb.KER_ATTR_TB.ACCDOCOBJECTFORMULA_ID);
        public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_FROMOBJECTFORMULA_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ATTR_PK, KerAttrTb.KER_ATTR_TB, "KER_ATTR_FROMOBJECTFORMULA_FK", KerAttrTb.KER_ATTR_TB.FROMOBJECTFORMULA_ID);
        public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_TOOBJECTFORMULA_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ATTR_PK, KerAttrTb.KER_ATTR_TB, "KER_ATTR_TOOBJECTFORMULA_FK", KerAttrTb.KER_ATTR_TB.TOOBJECTFORMULA_ID);
        public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_TEXTSRC_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ATTR_PK, KerAttrTb.KER_ATTR_TB, "KER_ATTR_TEXTSRC_FK", KerAttrTb.KER_ATTR_TB.TEXTSRC_ID);
        public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_OWNERFORMULA_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ATTR_PK, KerAttrTb.KER_ATTR_TB, "KER_ATTR_OWNERFORMULA_FK", KerAttrTb.KER_ATTR_TB.OWNERFORMULA_ID);
        public static final ForeignKey<KerAttrTbRecord, KerAttrTbRecord> KER_ATTR_IMGSRC_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ATTR_PK, KerAttrTb.KER_ATTR_TB, "KER_ATTR_IMGSRC_FK", KerAttrTb.KER_ATTR_TB.IMGSRC_ID);
        public static final ForeignKey<KerEntityTbRecord, KerEntityTbRecord> KER_ENTITY_ANCESTOR_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ENTITY_PK, KerEntityTb.KER_ENTITY_TB, "KER_ENTITY_ANCESTOR_FK", KerEntityTb.KER_ENTITY_TB.ANCESTOR_ID);
        public static final ForeignKey<KerEntityTbRecord, KerRelTbRecord> KER_ENTITY_MASTER_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_REL_PK, KerEntityTb.KER_ENTITY_TB, "KER_ENTITY_MASTER_FK", KerEntityTb.KER_ENTITY_TB.MASTER_ID);
        public static final ForeignKey<KerRelTbRecord, KerEntityTbRecord> KER_REL_ENTITY_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ENTITY_PK, KerRelTb.KER_REL_TB, "KER_REL_ENTITY_FK", KerRelTb.KER_REL_TB.ENTITY_ID);
        public static final ForeignKey<KerRelTbRecord, KerEntityTbRecord> KER_REL_TOENTITY_FK = Internal.createForeignKey(com.provys.ealoader.catalogue.db.Keys.KER_ENTITY_PK, KerRelTb.KER_REL_TB, "KER_REL_TOENTITY_FK", KerRelTb.KER_REL_TB.TOENTITY_ID);
    }
}
