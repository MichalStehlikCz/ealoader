/*
 * This file is generated by jOOQ.
 */
package com.provys.ealoader.catalogue.db.tables.records;


import com.provys.ealoader.catalogue.db.tables.KerRelTb;

import java.math.BigInteger;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Relations (catalogue)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KerRelTbRecord extends UpdatableRecordImpl<KerRelTbRecord> implements Record22<Long, String, String, String, String, String, BigInteger, BigInteger, String, String, String, String, String, String, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 872393533;

    /**
     * Setter for <code>KER.KER_REL_TB.REL_ID</code>. UID
     */
    public void setRelId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.REL_ID</code>. UID
     */
    public Long getRelId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.RELTYPE</code>. Relation type (S=simple, M=MN-relation implemented through table, F=free)
     */
    public void setReltype(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.RELTYPE</code>. Relation type (S=simple, M=MN-relation implemented through table, F=free)
     */
    public String getReltype() {
        return (String) get(1);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.NAME_NM</code>. Internal name (identification) of relation
     */
    public void setNameNm(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.NAME_NM</code>. Internal name (identification) of relation
     */
    public String getNameNm() {
        return (String) get(2);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.ISCUSTOM</code>. Relation is custom for actual installation
     */
    public void setIscustom(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.ISCUSTOM</code>. Relation is custom for actual installation
     */
    public String getIscustom() {
        return (String) get(3);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.NAME</code>. Name of relation as entity -&gt; name -&gt; toentity (used in develop lang)
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.NAME</code>. Name of relation as entity -&gt; name -&gt; toentity (used in develop lang)
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.TONAME</code>. Name of relation as toentity -&gt; name -&gt; entity (used in develop lang)
     */
    public void setToname(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.TONAME</code>. Name of relation as toentity -&gt; name -&gt; entity (used in develop lang)
     */
    public String getToname() {
        return (String) get(5);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.ENTITY_ID</code>. UID of entity relation belongs to (entity with resulting UIDs)
     */
    public void setEntityId(BigInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.ENTITY_ID</code>. UID of entity relation belongs to (entity with resulting UIDs)
     */
    public BigInteger getEntityId() {
        return (BigInteger) get(6);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.TOENTITY_ID</code>. UID of entity queried (entity with source UIDs)
     */
    public void setToentityId(BigInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.TOENTITY_ID</code>. UID of entity queried (entity with source UIDs)
     */
    public BigInteger getToentityId() {
        return (BigInteger) get(7);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.COLUMN_NM</code>. Name of column in entity's table_nm
     */
    public void setColumnNm(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.COLUMN_NM</code>. Name of column in entity's table_nm
     */
    public String getColumnNm() {
        return (String) get(8);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.TOCOLUMN_NM</code>. Name of column in toentity's table_nm
     */
    public void setTocolumnNm(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.TOCOLUMN_NM</code>. Name of column in toentity's table_nm
     */
    public String getTocolumnNm() {
        return (String) get(9);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.MNTABLE_NM</code>. Name of MN-decomposition view / table (for internal access)
     */
    public void setMntableNm(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.MNTABLE_NM</code>. Name of MN-decomposition view / table (for internal access)
     */
    public String getMntableNm() {
        return (String) get(10);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.MNVIEW_NM</code>. Name of MN-decomposition view / table (for client)
     */
    public void setMnviewNm(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.MNVIEW_NM</code>. Name of MN-decomposition view / table (for client)
     */
    public String getMnviewNm() {
        return (String) get(11);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.MNCOLUMN_NM</code>. Name of column in MN-decomposition view, coresponding to entity
     */
    public void setMncolumnNm(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.MNCOLUMN_NM</code>. Name of column in MN-decomposition view, coresponding to entity
     */
    public String getMncolumnNm() {
        return (String) get(12);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.MNTOCOLUMN_NM</code>. Name of column in MN-decomposition view, coresponding to toentity
     */
    public void setMntocolumnNm(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.MNTOCOLUMN_NM</code>. Name of column in MN-decomposition view, coresponding to toentity
     */
    public String getMntocolumnNm() {
        return (String) get(13);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.FK</code>. If column_nm is key_nm (in table_nm for entity), this flag identifies if UIDs in tocolumn are to be checked for type by selecting from entity's table_nm
     */
    public void setFk(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.FK</code>. If column_nm is key_nm (in table_nm for entity), this flag identifies if UIDs in tocolumn are to be checked for type by selecting from entity's table_nm
     */
    public String getFk() {
        return (String) get(14);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.TBINFREECOND_CD</code>. Template for IN-variant of condition (for internal access)
     */
    public void setTbinfreecondCd(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.TBINFREECOND_CD</code>. Template for IN-variant of condition (for internal access)
     */
    public String getTbinfreecondCd() {
        return (String) get(15);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.TBEXFREECOND_CD</code>. Template for EXISTS variant of condition (for internal access)
     */
    public void setTbexfreecondCd(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.TBEXFREECOND_CD</code>. Template for EXISTS variant of condition (for internal access)
     */
    public String getTbexfreecondCd() {
        return (String) get(16);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.VWINFREECOND_CD</code>. Template for IN-variant of condition (for client)
     */
    public void setVwinfreecondCd(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.VWINFREECOND_CD</code>. Template for IN-variant of condition (for client)
     */
    public String getVwinfreecondCd() {
        return (String) get(17);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.VWEXFREECOND_CD</code>. Template for EXISTS variant of condition (for client)
     */
    public void setVwexfreecondCd(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.VWEXFREECOND_CD</code>. Template for EXISTS variant of condition (for client)
     */
    public String getVwexfreecondCd() {
        return (String) get(18);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.RECURSIVE</code>. NULL - not recursive; T - transitive closure; R - transitive and recursive closure; meaningful only for simple SELF to SELF relations
     */
    public void setRecursive(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.RECURSIVE</code>. NULL - not recursive; T - transitive closure; R - transitive and recursive closure; meaningful only for simple SELF to SELF relations
     */
    public String getRecursive() {
        return (String) get(19);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.CASCXMLEXPORT</code>. Defines how is relation supported in XML exports - N value means no support, Y - included by default, NULL - supported but not included by default. If relation is marked as supported, it means that source objects are / can be included in target entitys XML file.
     */
    public void setCascxmlexport(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.CASCXMLEXPORT</code>. Defines how is relation supported in XML exports - N value means no support, Y - included by default, NULL - supported but not included by default. If relation is marked as supported, it means that source objects are / can be included in target entitys XML file.
     */
    public String getCascxmlexport() {
        return (String) get(20);
    }

    /**
     * Setter for <code>KER.KER_REL_TB.ATTREQUIVALENCE</code>. Defines, that some attributes have the same value on both sides of the relation. It is utilized by XML exports/imports.
The form is e.g:  A=B;C;D.E=F
  when the ralation is from entity E1 to entity E2, that means:
    E1.A has the same value as E2.B
    E1.C has the same value as E2.C
    when E1.D is foreign key to entity with composite natural key, it means that
      component E of the key has the same value as E2.F.
      Warning: something like G=H.K is NOT allowed.
     */
    public void setAttrequivalence(String value) {
        set(21, value);
    }

    /**
     * Getter for <code>KER.KER_REL_TB.ATTREQUIVALENCE</code>. Defines, that some attributes have the same value on both sides of the relation. It is utilized by XML exports/imports.
The form is e.g:  A=B;C;D.E=F
  when the ralation is from entity E1 to entity E2, that means:
    E1.A has the same value as E2.B
    E1.C has the same value as E2.C
    when E1.D is foreign key to entity with composite natural key, it means that
      component E of the key has the same value as E2.F.
      Warning: something like G=H.K is NOT allowed.
     */
    public String getAttrequivalence() {
        return (String) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<Long, String, String, String, String, String, BigInteger, BigInteger, String, String, String, String, String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<Long, String, String, String, String, String, BigInteger, BigInteger, String, String, String, String, String, String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return KerRelTb.KER_REL_TB.REL_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return KerRelTb.KER_REL_TB.RELTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return KerRelTb.KER_REL_TB.NAME_NM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return KerRelTb.KER_REL_TB.ISCUSTOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return KerRelTb.KER_REL_TB.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return KerRelTb.KER_REL_TB.TONAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field7() {
        return KerRelTb.KER_REL_TB.ENTITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigInteger> field8() {
        return KerRelTb.KER_REL_TB.TOENTITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return KerRelTb.KER_REL_TB.COLUMN_NM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return KerRelTb.KER_REL_TB.TOCOLUMN_NM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return KerRelTb.KER_REL_TB.MNTABLE_NM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return KerRelTb.KER_REL_TB.MNVIEW_NM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return KerRelTb.KER_REL_TB.MNCOLUMN_NM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return KerRelTb.KER_REL_TB.MNTOCOLUMN_NM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return KerRelTb.KER_REL_TB.FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return KerRelTb.KER_REL_TB.TBINFREECOND_CD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return KerRelTb.KER_REL_TB.TBEXFREECOND_CD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field18() {
        return KerRelTb.KER_REL_TB.VWINFREECOND_CD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field19() {
        return KerRelTb.KER_REL_TB.VWEXFREECOND_CD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field20() {
        return KerRelTb.KER_REL_TB.RECURSIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field21() {
        return KerRelTb.KER_REL_TB.CASCXMLEXPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field22() {
        return KerRelTb.KER_REL_TB.ATTREQUIVALENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getRelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getReltype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getNameNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getIscustom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getToname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component7() {
        return getEntityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger component8() {
        return getToentityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getColumnNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getTocolumnNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getMntableNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getMnviewNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getMncolumnNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getMntocolumnNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getTbinfreecondCd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getTbexfreecondCd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component18() {
        return getVwinfreecondCd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component19() {
        return getVwexfreecondCd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component20() {
        return getRecursive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component21() {
        return getCascxmlexport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component22() {
        return getAttrequivalence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getRelId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getReltype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNameNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getIscustom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getToname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value7() {
        return getEntityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigInteger value8() {
        return getToentityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getColumnNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getTocolumnNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getMntableNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getMnviewNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getMncolumnNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getMntocolumnNm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getTbinfreecondCd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getTbexfreecondCd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value18() {
        return getVwinfreecondCd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value19() {
        return getVwexfreecondCd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value20() {
        return getRecursive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value21() {
        return getCascxmlexport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value22() {
        return getAttrequivalence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value1(Long value) {
        setRelId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value2(String value) {
        setReltype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value3(String value) {
        setNameNm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value4(String value) {
        setIscustom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value5(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value6(String value) {
        setToname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value7(BigInteger value) {
        setEntityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value8(BigInteger value) {
        setToentityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value9(String value) {
        setColumnNm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value10(String value) {
        setTocolumnNm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value11(String value) {
        setMntableNm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value12(String value) {
        setMnviewNm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value13(String value) {
        setMncolumnNm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value14(String value) {
        setMntocolumnNm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value15(String value) {
        setFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value16(String value) {
        setTbinfreecondCd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value17(String value) {
        setTbexfreecondCd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value18(String value) {
        setVwinfreecondCd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value19(String value) {
        setVwexfreecondCd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value20(String value) {
        setRecursive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value21(String value) {
        setCascxmlexport(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord value22(String value) {
        setAttrequivalence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KerRelTbRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, BigInteger value7, BigInteger value8, String value9, String value10, String value11, String value12, String value13, String value14, String value15, String value16, String value17, String value18, String value19, String value20, String value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KerRelTbRecord
     */
    public KerRelTbRecord() {
        super(KerRelTb.KER_REL_TB);
    }

    /**
     * Create a detached, initialised KerRelTbRecord
     */
    public KerRelTbRecord(Long relId, String reltype, String nameNm, String iscustom, String name, String toname, BigInteger entityId, BigInteger toentityId, String columnNm, String tocolumnNm, String mntableNm, String mnviewNm, String mncolumnNm, String mntocolumnNm, String fk, String tbinfreecondCd, String tbexfreecondCd, String vwinfreecondCd, String vwexfreecondCd, String recursive, String cascxmlexport, String attrequivalence) {
        super(KerRelTb.KER_REL_TB);

        set(0, relId);
        set(1, reltype);
        set(2, nameNm);
        set(3, iscustom);
        set(4, name);
        set(5, toname);
        set(6, entityId);
        set(7, toentityId);
        set(8, columnNm);
        set(9, tocolumnNm);
        set(10, mntableNm);
        set(11, mnviewNm);
        set(12, mncolumnNm);
        set(13, mntocolumnNm);
        set(14, fk);
        set(15, tbinfreecondCd);
        set(16, tbexfreecondCd);
        set(17, vwinfreecondCd);
        set(18, vwexfreecondCd);
        set(19, recursive);
        set(20, cascxmlexport);
        set(21, attrequivalence);
    }
}
